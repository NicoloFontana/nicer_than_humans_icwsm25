def generate_game_rules_prompt(action_space, payoff_function, n_iterations):
    payoff_prompt = ""

    ### v0.4
    for action in action_space:
        for opponent_action in action_space:
            payoff_dict = {
                "action_of_A": to_nat_lang(action),
                "action_of_B": to_nat_lang(opponent_action),
                "payoff_of_A": payoff_function(action, opponent_action),
                "payoff_of_B": payoff_function(opponent_action, action)
            }
            payoff_prompt += str(payoff_dict)

    game_rules_prompt = (f"<<SYS>>\n"
                         f"\tContext: Player A is playing a multi-round game against player B.\n"
                         f"\tAt each turn player A and player B simultaneously perform one of the following actions: {to_nat_lang(action_space, True)}\n"
                         f"\tThe payoffs for each combination of chosen action are the following:\n"
                         f"\t[{payoff_prompt}]"
                         f"They will play a total of {n_iterations} rounds of this game.\n"
                         f"\tRemember that a player's objective is to get the highest possible amount of points in the long run.\n")

    return game_rules_prompt
                if "def generate_game_rules_prompt(" in line.strip():
                    outfile.write(line)
                    copy = True
                elif "return game_rules_prompt" in line.strip():
